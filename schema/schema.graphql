# source: http://localhost:3000
# timestamp: Mon Aug 03 2020 12:25:13 GMT-0300 (Argentina Standard Time)

"""A prismic document"""
interface _Document {
  _meta: Meta!
}

"""A connection to a list of items."""
type _DocumentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [_DocumentEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type _DocumentEdge {
  """The item at the end of the edge."""
  node: _Document!

  """A cursor for use in pagination."""
  cursor: String!
}

"""An external link"""
type _ExternalLink implements _Linkable {
  url: String!
  target: String
  _linkType: String
}

"""A linked file"""
type _FileLink implements _Linkable {
  name: String!
  url: String!
  size: Long!
  _linkType: String
}

"""A linked image"""
type _ImageLink implements _Linkable {
  name: String!
  url: String!
  size: Long!
  height: Int!
  width: Int!
  _linkType: String
}

"""A prismic link"""
interface _Linkable {
  _linkType: String
}

"""DateTime"""
scalar DateTime

type Donations implements _Document & _Linkable {
  section_name: String
  donation_link: _Linkable
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type DonationsConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DonationsConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type DonationsConnectionEdge {
  """The item at the end of the edge."""
  node: Donations!

  """A cursor for use in pagination."""
  cursor: String!
}

type Footer implements _Document & _Linkable {
  section_name: String
  social_networks: [FooterSocial_networks!]
  action_buttons: [FooterAction_buttons!]
  navigation_links: [FooterNavigation_links!]
  _meta: Meta!
  _linkType: String
}

type FooterAction_buttons {
  text: String
  link: _Linkable
}

"""A connection to a list of items."""
type FooterConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FooterConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type FooterConnectionEdge {
  """The item at the end of the edge."""
  node: Footer!

  """A cursor for use in pagination."""
  cursor: String!
}

type FooterNavigation_links {
  text: String
  link: _Linkable
}

type FooterSocial_networks {
  image: Json
  link: _Linkable
}

type Founder implements _Document & _Linkable {
  section_name: String
  founder_picture: Json
  founder_information: Json
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type FounderConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FounderConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type FounderConnectionEdge {
  """The item at the end of the edge."""
  node: Founder!

  """A cursor for use in pagination."""
  cursor: String!
}

type Header implements _Document & _Linkable {
  pata_pila_icon: Json
  social_media: [HeaderSocial_media!]
  header_links: [HeaderHeader_links!]
  action_buttons: [HeaderAction_buttons!]
  _meta: Meta!
  _linkType: String
}

type HeaderAction_buttons {
  background_color: String
  border_color: String
  text_color: String
  mobile_background_color: String
  mobile_border_color: String
  mobile_text_color: String
  action_title: Json
  action: _Linkable
}

"""A connection to a list of items."""
type HeaderConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [HeaderConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type HeaderConnectionEdge {
  """The item at the end of the edge."""
  node: Header!

  """A cursor for use in pagination."""
  cursor: String!
}

type HeaderHeader_links {
  link_title: Json
  link_url: _Linkable
}

type HeaderSocial_media {
  social_icon: Json
  social_name: Json
  social_link: _Linkable
}

type Home_banner implements _Document & _Linkable {
  banner_image: Json
  banner_text: Json
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Home_bannerConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Home_bannerConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Home_bannerConnectionEdge {
  """The item at the end of the edge."""
  node: Home_banner!

  """A cursor for use in pagination."""
  cursor: String!
}

type Icon_list implements _Document & _Linkable {
  section_title: Json
  background_image: Json
  icon_list_elements: [Icon_listIcon_list_elements!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Icon_listConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Icon_listConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Icon_listConnectionEdge {
  """The item at the end of the edge."""
  node: Icon_list!

  """A cursor for use in pagination."""
  cursor: String!
}

type Icon_listIcon_list_elements {
  icon: Json
  title: Json
  subtitle: Json
}

type Icon_tabs_section implements _Document & _Linkable {
  section_title: Json
  section_background_color: String
  icon_tabs: [Icon_tabs_sectionIcon_tabs!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Icon_tabs_sectionConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Icon_tabs_sectionConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Icon_tabs_sectionConnectionEdge {
  """The item at the end of the edge."""
  node: Icon_tabs_section!

  """A cursor for use in pagination."""
  cursor: String!
}

type Icon_tabs_sectionIcon_tabs {
  tab_icon: Json
  tab_image: Json
  tab_title: Json
  tab_link: _Linkable
  tab_description: Json
}

type Image_text implements _Document & _Linkable {
  title: Json
  text: Json
  text_align: String
  image: Json
  image_positioning: String
  image_x: Float
  image_y: Float
  text_positioning: String
  text_x: Float
  text_y: Float
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Image_textConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Image_textConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Image_textConnectionEdge {
  """The item at the end of the edge."""
  node: Image_text!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Raw JSON value"""
scalar Json

type Landing implements _Document & _Linkable {
  title: Json
  route: String
  sections: [LandingSections!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type LandingConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [LandingConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type LandingConnectionEdge {
  """The item at the end of the edge."""
  node: Landing!

  """A cursor for use in pagination."""
  cursor: String!
}

type LandingSections {
  section: _Linkable
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Malnutrition implements _Document & _Linkable {
  title: Json
  route: Json
  sections: [MalnutritionSections!]
  _meta: Meta!
  _linkType: String
}

type Malnutrition_menu implements _Document & _Linkable {
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Malnutrition_menuConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Malnutrition_menuConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Malnutrition_menuConnectionEdge {
  """The item at the end of the edge."""
  node: Malnutrition_menu!

  """A cursor for use in pagination."""
  cursor: String!
}

type Malnutrition_section implements _Document & _Linkable {
  malnutrition_title: String
  malnutrition_image_1: Json
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Malnutrition_sectionConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Malnutrition_sectionConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Malnutrition_sectionConnectionEdge {
  """The item at the end of the edge."""
  node: Malnutrition_section!

  """A cursor for use in pagination."""
  cursor: String!
}

"""A connection to a list of items."""
type MalnutritionConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MalnutritionConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type MalnutritionConnectionEdge {
  """The item at the end of the edge."""
  node: Malnutrition!

  """A cursor for use in pagination."""
  cursor: String!
}

type MalnutritionSections {
  section: _Linkable
}

type Meta {
  """The id of the document."""
  id: String!

  """The uid of the document."""
  uid: String

  """The type of the document."""
  type: String!

  """The tags of the document."""
  tags: [String!]!

  """The language of the document."""
  lang: String!

  """Alternate languages the document."""
  alternateLanguages: [RelatedDocument!]!

  """The first publication date of the document."""
  firstPublicationDate: DateTime

  """The last publication date of the document."""
  lastPublicationDate: DateTime
}

type News_banner implements _Document & _Linkable {
  section_title: Json
  articles_list: [News_bannerArticles_list!]
  _meta: Meta!
  _linkType: String
}

type News_bannerArticles_list {
  article_image: Json
  newspaper_icon: Json
  article_title: Json
  article_url: _Linkable
}

"""A connection to a list of items."""
type News_bannerConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [News_bannerConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type News_bannerConnectionEdge {
  """The item at the end of the edge."""
  node: News_banner!

  """A cursor for use in pagination."""
  cursor: String!
}

type Organization implements _Document & _Linkable {
  organization_name: String
  members: [OrganizationMembers!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type OrganizationConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [OrganizationConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type OrganizationConnectionEdge {
  """The item at the end of the edge."""
  node: Organization!

  """A cursor for use in pagination."""
  cursor: String!
}

type OrganizationMembers {
  name: String
  position: String
}

type Organizations implements _Document & _Linkable {
  section_name: String
  organizations: [OrganizationsOrganizations!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type OrganizationsConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [OrganizationsConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type OrganizationsConnectionEdge {
  """The item at the end of the edge."""
  node: Organizations!

  """A cursor for use in pagination."""
  cursor: String!
}

type OrganizationsOrganizations {
  organization: _Linkable
}

type Other_type implements _Document & _Linkable {
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Other_typeConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Other_typeConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Other_typeConnectionEdge {
  """The item at the end of the edge."""
  node: Other_type!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Presentation implements _Document & _Linkable {
  title: Json
  theme: String
  slides: [PresentationSlides!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type PresentationConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PresentationConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type PresentationConnectionEdge {
  """The item at the end of the edge."""
  node: Presentation!

  """A cursor for use in pagination."""
  cursor: String!
}

type PresentationSlides {
  text_alignment: String
  content: Json
}

type Query {
  _allDocuments(sortBy: SortDocumentsBy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, before: String, after: String, first: Int, last: Int): _DocumentConnection!
  allNews_banners(sortBy: SortNews_bannery, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereNews_banner, before: String, after: String, first: Int, last: Int): News_bannerConnectionConnection!
  allOrganizations(sortBy: SortOrganizationy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereOrganization, before: String, after: String, first: Int, last: Int): OrganizationConnectionConnection!
  allFounders(sortBy: SortFoundery, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereFounder, before: String, after: String, first: Int, last: Int): FounderConnectionConnection!
  allDonationss(sortBy: SortDonationsy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereDonations, before: String, after: String, first: Int, last: Int): DonationsConnectionConnection!
  allHome_banners(sortBy: SortHome_bannery, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereHome_banner, before: String, after: String, first: Int, last: Int): Home_bannerConnectionConnection!
  allIcon_tabs_sections(sortBy: SortIcon_tabs_sectiony, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereIcon_tabs_section, before: String, after: String, first: Int, last: Int): Icon_tabs_sectionConnectionConnection!
  allVertical_tabss(sortBy: SortVertical_tabsy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereVertical_tabs, before: String, after: String, first: Int, last: Int): Vertical_tabsConnectionConnection!
  allMalnutrition_sections(sortBy: SortMalnutrition_sectiony, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereMalnutrition_section, before: String, after: String, first: Int, last: Int): Malnutrition_sectionConnectionConnection!
  allTabss(sortBy: SortTabsy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereTabs, before: String, after: String, first: Int, last: Int): TabsConnectionConnection!
  allUijhius(sortBy: SortUijhiuy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, before: String, after: String, first: Int, last: Int): UijhiuConnectionConnection!
  allHeaders(sortBy: SortHeadery, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, before: String, after: String, first: Int, last: Int): HeaderConnectionConnection!
  allLandings(sortBy: SortLandingy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereLanding, before: String, after: String, first: Int, last: Int): LandingConnectionConnection!
  allMalnutrition_menus(sortBy: SortMalnutrition_menuy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, before: String, after: String, first: Int, last: Int): Malnutrition_menuConnectionConnection!
  allIcon_lists(sortBy: SortIcon_listy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereIcon_list, before: String, after: String, first: Int, last: Int): Icon_listConnectionConnection!
  allImage_texts(sortBy: SortImage_texty, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereImage_text, before: String, after: String, first: Int, last: Int): Image_textConnectionConnection!
  allOther_types(sortBy: SortOther_typey, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, before: String, after: String, first: Int, last: Int): Other_typeConnectionConnection!
  allOrganizationss(sortBy: SortOrganizationsy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereOrganizations, before: String, after: String, first: Int, last: Int): OrganizationsConnectionConnection!
  allFooters(sortBy: SortFootery, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereFooter, before: String, after: String, first: Int, last: Int): FooterConnectionConnection!
  allTeam_members(sortBy: SortTeam_membery, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, before: String, after: String, first: Int, last: Int): Team_memberConnectionConnection!
  allPresentations(sortBy: SortPresentationy, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WherePresentation, before: String, after: String, first: Int, last: Int): PresentationConnectionConnection!
  allMalnutritions(sortBy: SortMalnutritiony, id: String, id_in: [String!], uid: String, uid_in: [String!], lang: String, tags: [String!], tags_in: [String!], type: String, type_in: [String!], firstPublicationDate: DateTime, firstPublicationDate_after: DateTime, firstPublicationDate_before: DateTime, lastPublicationDate: DateTime, lastPublicationDate_after: DateTime, lastPublicationDate_before: DateTime, fulltext: String, similar: similar, where: WhereMalnutrition, before: String, after: String, first: Int, last: Int): MalnutritionConnectionConnection!
}

type RelatedDocument {
  """The id of the document."""
  id: String!

  """The uid of the document."""
  uid: String

  """The type of the document."""
  type: String!

  """The language of the document."""
  lang: String!
}

input similar {
  documentId: String!
  max: Int!
}

enum SortDocumentsBy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
}

enum SortDonationsy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_name_ASC
  section_name_DESC
}

enum SortFootery {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_name_ASC
  section_name_DESC
}

enum SortFoundery {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_name_ASC
  section_name_DESC
  founder_information_ASC
  founder_information_DESC
}

enum SortHeadery {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
}

enum SortHome_bannery {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  banner_text_ASC
  banner_text_DESC
}

enum SortIcon_listy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_title_ASC
  section_title_DESC
}

enum SortIcon_tabs_sectiony {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_title_ASC
  section_title_DESC
}

enum SortImage_texty {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
  text_align_ASC
  text_align_DESC
  image_positioning_ASC
  image_positioning_DESC
  image_x_ASC
  image_x_DESC
  image_y_ASC
  image_y_DESC
  text_positioning_ASC
  text_positioning_DESC
  text_x_ASC
  text_x_DESC
  text_y_ASC
  text_y_DESC
}

enum SortLandingy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  title_ASC
  title_DESC
  route_ASC
  route_DESC
}

enum SortMalnutrition_menuy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
}

enum SortMalnutrition_sectiony {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  malnutrition_title_ASC
  malnutrition_title_DESC
}

enum SortMalnutritiony {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  title_ASC
  title_DESC
  route_ASC
  route_DESC
}

enum SortNews_bannery {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_title_ASC
  section_title_DESC
}

enum SortOrganizationsy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_name_ASC
  section_name_DESC
}

enum SortOrganizationy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  organization_name_ASC
  organization_name_DESC
}

enum SortOther_typey {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
}

enum SortPresentationy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  title_ASC
  title_DESC
  theme_ASC
  theme_DESC
}

enum SortTabsy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_title_ASC
  section_title_DESC
}

enum SortTeam_membery {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
}

enum SortUijhiuy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
}

enum SortVertical_tabsy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  section_name_ASC
  section_name_DESC
}

type Tabs implements _Document & _Linkable {
  section_title: String
  background_color: String
  tabs_name_color: String
  tabs_name_selected_color: String
  tabs_list: [TabsTabs_list!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type TabsConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TabsConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type TabsConnectionEdge {
  """The item at the end of the edge."""
  node: Tabs!

  """A cursor for use in pagination."""
  cursor: String!
}

type TabsTabs_list {
  name: String
  content: Json
  content_color: String
  content_background_color: String
}

type Team_member implements _Document & _Linkable {
  team: [Team_memberTeam!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Team_memberConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Team_memberConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Team_memberConnectionEdge {
  """The item at the end of the edge."""
  node: Team_member!

  """A cursor for use in pagination."""
  cursor: String!
}

type Team_memberTeam {
  name: String
  position: String
}

type Uijhiu implements _Document & _Linkable {
  jni: [UijhiuJni!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type UijhiuConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UijhiuConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type UijhiuConnectionEdge {
  """The item at the end of the edge."""
  node: Uijhiu!

  """A cursor for use in pagination."""
  cursor: String!
}

type UijhiuJni {
  text_align: String
  djkjiwjdwiowd: Json
}

type Vertical_tabs implements _Document & _Linkable {
  section_name: String
  section_header: Json
  tabs_list: [Vertical_tabsTabs_list!]
  _meta: Meta!
  _linkType: String
}

"""A connection to a list of items."""
type Vertical_tabsConnectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [Vertical_tabsConnectionEdge]
  totalCount: Long!
}

"""An edge in a connection."""
type Vertical_tabsConnectionEdge {
  """The item at the end of the edge."""
  node: Vertical_tabs!

  """A cursor for use in pagination."""
  cursor: String!
}

type Vertical_tabsTabs_list {
  name: String
  content: Json
}

input WhereDonations {
  section_name: String
  section_name_fulltext: String

  """donation_link"""
  donation_link: String
}

input WhereFooter {
  section_name: String
  section_name_fulltext: String
}

input WhereFounder {
  section_name: String
  section_name_fulltext: String

  """founder_information"""
  founder_information_fulltext: String
}

input WhereHome_banner {
  """banner_text"""
  banner_text_fulltext: String
}

input WhereIcon_list {
  """section_title"""
  section_title_fulltext: String
}

input WhereIcon_tabs_section {
  """section_title"""
  section_title_fulltext: String
}

input WhereImage_text {
  """title"""
  title_fulltext: String

  """text"""
  text_fulltext: String
  text_align: String
  text_align_fulltext: String
  image_positioning: String
  image_positioning_fulltext: String

  """image_x"""
  image_x: Float

  """image_x"""
  image_x_lt: Float

  """image_x"""
  image_x_gt: Float

  """image_x"""
  image_x_range: [Float!]

  """image_y"""
  image_y: Float

  """image_y"""
  image_y_lt: Float

  """image_y"""
  image_y_gt: Float

  """image_y"""
  image_y_range: [Float!]
  text_positioning: String
  text_positioning_fulltext: String

  """text_x"""
  text_x: Float

  """text_x"""
  text_x_lt: Float

  """text_x"""
  text_x_gt: Float

  """text_x"""
  text_x_range: [Float!]

  """text_y"""
  text_y: Float

  """text_y"""
  text_y_lt: Float

  """text_y"""
  text_y_gt: Float

  """text_y"""
  text_y_range: [Float!]
}

input WhereLanding {
  """title"""
  title_fulltext: String
  route: String
  route_fulltext: String
}

input WhereMalnutrition {
  """title"""
  title_fulltext: String

  """route"""
  route_fulltext: String
}

input WhereMalnutrition_section {
  malnutrition_title: String
  malnutrition_title_fulltext: String
}

input WhereNews_banner {
  """section_title"""
  section_title_fulltext: String
}

input WhereOrganization {
  organization_name: String
  organization_name_fulltext: String
}

input WhereOrganizations {
  section_name: String
  section_name_fulltext: String
}

input WherePresentation {
  """title"""
  title_fulltext: String
  theme: String
  theme_fulltext: String
}

input WhereTabs {
  section_title: String
  section_title_fulltext: String
}

input WhereVertical_tabs {
  section_name: String
  section_name_fulltext: String
}
